- name: Deploy docker-compose
  hosts: all
  become: true

  tasks:
    - name: Create .env file
      ansible.builtin.copy:
        dest: /home/ubuntu/.env
        content: |
          POSTGRES_USER={{ POSTGRES_USER }}
          POSTGRES_PASSWORD={{ POSTGRES_PASSWORD }}
          POSTGRES_DB={{ POSTGRES_DB }}
          ADMIN_USER={{ ADMIN_USER }}
          ADMIN_PASSWORD={{ ADMIN_PASSWORD }}
          ADMIN_EMAIL={{ ADMIN_EMAIL }}
          AWS_ACCESS_KEY_ID={{ AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY={{ AWS_SECRET_ACCESS_KEY }}
          AWS_REGION={{ AWS_REGION }}
          S3_BUCKET_NAME={{ S3_BUCKET_NAME }}
          ENDPOINT={{ ENDPOINT }}
        owner: root
        group: root
        mode: '0644'

    - name: Copy docker-compose.yml file
      ansible.builtin.copy:
        src: ../docker-compose.yml
        dest: /home/ubuntu/docker-compose.yml
        owner: root
        group: root
        mode: '0644'

    - name: Copy .env.local file
      ansible.builtin.copy:
        src: ../.env.local
        dest: /home/ubuntu/.env.local
        owner: root
        group: root
        mode: '0644'

    - name: Replace placeholders in .env.local file
      ansible.builtin.shell:
        cmd: |
            "sed -i "s#_ENDPOINT_#${ENDPOINT}#g" /home/ubuntu/.env.local"
            "sed -i "s#_AWS_REGION_#${AWS_REGION}#g" /home/ubuntu/.env.local"
            "sed -i "s#_AWS_ACCESS_KEY_ID_#${AWS_ACCESS_KEY_ID}#g" /home/ubuntu/.env.local"
            "sed -i "s#_AWS_SECRET_ACCESS_KEY_#${AWS_SECRET_ACCESS_KEY}#g" /home/ubuntu/.env.local"

    - name: Run docker compose file
      community.docker.docker_compose_v2:
        project_src: /home/ubuntu
        state: present
        build: always
        pull: missing
        recreate: always
        remove_orphans: true
        timeout: 60
        project_name: speardevs_packeton
        files:
          - docker-compose.yml

    - name: Remove docker-compose.yml file
      ansible.builtin.file:
        path: /home/ubuntu/docker-compose.yml
        state: absent

    - name: Copy .env.local file
      community.docker.docker_container_copy_into:
        container: packeton-packeton
        path: /home/ubuntu/.env.local
        container_path: /tmp/.env.local

    - name: Update .env file in container
      community.docker.docker_container_exec:
        container: packeton-packeton
        command: "cat /tmp/.env.temp >> /path/to/.env && rm /tmp/.env.temp"
