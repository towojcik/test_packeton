- name: Deploy docker-compose
  hosts: all
  become: true

  tasks:
    - name: Set environment variables
      ansible.builtin.set_fact:
        postgres_user: "{{ POSTGRES_USER }}"
        postgres_password: "{{ POSTGRES_PASSWORD }}"
        postgres_db: "{{ POSTGRES_DB }}"
        admin_user: "{{ ADMIN_USER }}"
        admin_password: "{{ ADMIN_PASSWORD }}"
        admin_email: "{{ ADMIN_EMAIL }}"
        aws_access_key_id: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_access_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        aws_region: "{{ AWS_REGION }}"
        s3_bucket_name: "{{ S3_BUCKET_NAME }}"
        endpoint: "{{ ENDPOINT }}"

    - name: Copy docker-compose.yml file
      ansible.builtin.copy:
        src: ../docker-compose.yml
        dest: /home/ubuntu/docker-compose.yml
        owner: root
        group: root
        mode: '0644'

    - name: Generate .env.temp file from template
      ansible.builtin.template:
        src: ../.env.temp.j2
        dest: /home/ubuntu/.env.temp
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Run docker compose file
      community.docker.docker_compose_v2:
        project_src: /home/ubuntu
        state: present
        build: always
        pull: missing
        recreate: always
        remove_orphans: true
        timeout: 60
        project_name: speardevs_packeton
        files:
          - docker-compose.yml

    - name: Remove docker-compose.yml file
      ansible.builtin.file:
        path: /home/ubuntu/docker-compose.yml
        state: absent

    - name: Copy .env.local file
      community.docker.docker_container_copy_into:
        container: packeton-packeton
        path: /home/ubuntu/.env.temp
        container_path: /tmp/.env.temp

    - name: Update .env file in container
      community.docker.docker_container_exec:
        container: packeton-packeton
        command: "/bin/sh -c 'cat /tmp/.env.temp >> /data/.env && rm /tmp/.env.temp'"
